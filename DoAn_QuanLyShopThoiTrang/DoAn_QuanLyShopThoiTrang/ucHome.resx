<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>