using BLL_DAL;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid.Views.Base;
using DevExpress.XtraGrid.Views.Grid;
using GUI;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace DoAn_QuanLyShopThoiTrang
{
    public partial class ucQLSanPham : DevExpress.XtraEditors.XtraUserControl
    {
        SanPhamBLL sanPhamBLL = new SanPhamBLL();
        SanPham selectedSanPham;
        SetupControls setupControls=new SetupControls();
        LoaiSanPhamBLL_DAL loaiSanPham = new LoaiSanPhamBLL_DAL();
        GridView dView = new GridView();
        string maDM;
        public ucQLSanPham()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            sanPhamsBindingSource.DataSource = new BLL_DAL.dbShopThoiTrangDataContext().SanPhams;
            gridControl1.DataSource = sanPhamBLL.loadSanPham();
            MaLoaiSanPhamComboBoxEdit.Properties.DataSource = loaiSanPham.load_DSLoai();
            // This line of code is generated by Data Source Configuration Wizard
            nhaCungCapsBindingSource.DataSource = new BLL_DAL.dbShopThoiTrangDataContext().NhaCungCaps;

            load_PanelControl();
        }

        private void simpleButton2_Click(object sender, EventArgs e)
        {
            SanPham sp = new SanPham();
            sp.MaSanPham = MaSanPhamTextEdit.Text;
            sp.TenSanPham = TenSanPhamTextEdit.Text;
            sp.DonGia = double.Parse(DonGiaTextEdit.Text);
            sp.SoLuongTon = int.Parse(SoLuongTonSpinEdit.Text);
            sp.TrangThai = TrangThaiCheckEdit.Checked;
            sp.MoTa = MoTaTextEdit.Text;
            sp.Size = SizeTextEdit.Text;
            sp.MaLoaiSanPham = MaLoaiSanPhamComboBoxEdit.EditValue.ToString();
            sp.MaNhaCungCap = MaNhaCungCapCbo.EditValue.ToString();

            if (sanPhamBLL.InsertSanpham(sp))
            {
                SanPham sanpham = sanPhamBLL.detailSanpham(sp.MaSanPham);
                string urlPathImage = Program.linkURL_SanPham + sanpham.LoaiSanPham.MaDanhMuc + "\\" + sanpham.MaLoaiSanPham + "\\" + sanpham.TenSanPham;
                if (!Directory.Exists(urlPathImage))
                {
                    Directory.CreateDirectory(urlPathImage);
                }
                MessageBox.Show("Thêm thành công");
                gridControl1.DataSource = sanPhamBLL.loadSanPham();
                load_PanelControl();
            }
            else {
                MessageBox.Show("Thất bại");
            }
        }

        private void gridView1_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            if (gridView1.GetFocusedRowCellValue("MaSanPham") != null)
            {
                string ID = gridView1.GetFocusedRowCellValue("MaSanPham").ToString();
                selectedSanPham = sanPhamBLL.detailSanpham(ID);
                maDM = loaiSanPham.load_MaDanhMuc(selectedSanPham.MaLoaiSanPham);
                setupPanelProduct(selectedSanPham);
            }
        }
        private void setupPanelProduct(SanPham sanpham)
        {
            string urlFile="";
            if (sanpham.DanhMucHinhs.Count > 0) { 
                urlFile = Program.linkURL_SanPham + maDM + "\\" + sanpham.MaLoaiSanPham + "\\" + sanpham.TenSanPham + "\\" + sanpham.DanhMucHinhs[0].TenHinh;
            }
            else
            { urlFile = "E:\\KBS\\PTPN va UDTM\\image\\NoImage.jpg"; }
            buttonEditHinhAnh.Text = urlFile;
            setupControls.setupPicture(pictureEdit1, urlFile);
            MaSanPhamTextEdit.Text = sanpham.MaSanPham;
            TenSanPhamTextEdit.Text = sanpham.TenSanPham;
            DonGiaTextEdit.EditValue = sanpham.DonGia;
            SoLuongTonSpinEdit.EditValue = sanpham.SoLuongTon;
            TrangThaiCheckEdit.Checked = (bool)sanpham.TrangThai;
            SizeTextEdit.Text = sanpham.Size;
            MaLoaiSanPhamComboBoxEdit.EditValue = sanpham.MaLoaiSanPham;
            MaNhaCungCapCbo.EditValue = sanpham.MaNhaCungCap;
            MoTaTextEdit.Text = sanpham.MoTa;
        }

        private void MaLoaiSanPhamComboBoxEdit_EditValueChanged(object sender, EventArgs e)
        {
            if (MaLoaiSanPhamComboBoxEdit.EditValue.ToString() != null)
            {
                gridControl1.DataSource = sanPhamBLL.loadSanPham_ForLoai(MaLoaiSanPhamComboBoxEdit.EditValue.ToString());
                if (gridView1.GetFocusedRowCellValue("MaSanPham") != null)
                {
                    string ID = gridView1.GetFocusedRowCellValue("MaSanPham").ToString();
                    selectedSanPham = sanPhamBLL.detailSanpham(ID);
                    maDM = loaiSanPham.load_MaDanhMuc(selectedSanPham.MaLoaiSanPham);
                    setupPanelProduct(selectedSanPham);
                }
                    
            }
        }

        private void MaNhaCungCapCbo_EditValueChanged(object sender, EventArgs e)
        {
            if (MaLoaiSanPhamComboBoxEdit.EditValue.ToString() != null)
            {
                gridControl1.DataSource = sanPhamBLL.loadSanPham_ForNhaCungCap(MaNhaCungCapCbo.EditValue.ToString());
                if(gridView1.GetFocusedRowCellValue("MaSanPham") !=null)
                {
                    string ID = gridView1.GetFocusedRowCellValue("MaSanPham").ToString();
                    selectedSanPham = sanPhamBLL.detailSanpham(ID);
                    maDM = loaiSanPham.load_MaDanhMuc(selectedSanPham.MaLoaiSanPham);
                    setupPanelProduct(selectedSanPham);
                }
            }
        }
        public void load_PanelControl()
        {
            if (gridView1.GetFocusedRowCellValue("MaSanPham") != null)
            {
                string ID = gridView1.GetFocusedRowCellValue("MaSanPham").ToString();
                selectedSanPham = sanPhamBLL.detailSanpham(ID);
                maDM = loaiSanPham.load_MaDanhMuc(selectedSanPham.MaLoaiSanPham);
                setupPanelProduct(selectedSanPham);
            }
            
        }

        private void buttonEditHinhAnh_Properties_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            XtraOpenFileDialog xtraOpenFileDialog1 = new XtraOpenFileDialog();
            xtraOpenFileDialog1.InitialDirectory = Program.linkURL_SanPham;
            xtraOpenFileDialog1.Title = "Browse Text Files";
            if (xtraOpenFileDialog1.ShowDialog() == DialogResult.OK)
            {
                buttonEditHinhAnh.Text = xtraOpenFileDialog1.FileName;
                pictureEdit1.Image = Image.FromFile(xtraOpenFileDialog1.FileName);
            }
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            string maSP = MaSanPhamTextEdit.Text;
            string urlPathImage = Program.linkURL_SanPham + selectedSanPham.LoaiSanPham.MaDanhMuc + "\\" + selectedSanPham.MaLoaiSanPham + "\\" + selectedSanPham.TenSanPham;
            if (sanPhamBLL.DeleteSanpham(maSP))
            {
                SanPham sanpham = sanPhamBLL.detailSanpham(maSP);
                
                if (Directory.Exists(urlPathImage))
                {
                    Directory.Delete(urlPathImage,true);
                }
                MessageBox.Show("Xóa thành công");
                gridControl1.DataSource = sanPhamBLL.loadSanPham();
                load_PanelControl();
            }
            else
            {
                MessageBox.Show("Thất bại! Sản phẩm có thể đã có trong hóa đơn");
            }
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            string OldFolderName = selectedSanPham.TenSanPham;
            SanPham sp = new SanPham();
            sp.MaSanPham = MaSanPhamTextEdit.Text;
            sp.TenSanPham = TenSanPhamTextEdit.Text;
            sp.DonGia = double.Parse(DonGiaTextEdit.Text);
            sp.SoLuongTon = int.Parse(SoLuongTonSpinEdit.Text);
            sp.TrangThai = TrangThaiCheckEdit.Checked;
            sp.MoTa = MoTaTextEdit.Text;
            sp.Size = SizeTextEdit.Text;
            sp.MaLoaiSanPham = MaLoaiSanPhamComboBoxEdit.EditValue.ToString();
            sp.MaNhaCungCap = MaNhaCungCapCbo.EditValue.ToString();
            string oldeFolder = Program.linkURL_SanPham + selectedSanPham.LoaiSanPham.MaDanhMuc + "\\" + selectedSanPham.MaLoaiSanPham + "\\" + OldFolderName;
            if (sanPhamBLL.UpdateSanpham(sp))
            {
                SanPham sanpham = sanPhamBLL.detailSanpham(sp.MaSanPham);
                string urlPathImage = Program.linkURL_SanPham + sanpham.LoaiSanPham.MaDanhMuc + "\\" + sanpham.MaLoaiSanPham + "\\" + sanpham.TenSanPham;
                if (Directory.Exists(oldeFolder)&&!Directory.Exists(urlPathImage)&&!oldeFolder.Contains(urlPathImage))
                {
                    Directory.Move(oldeFolder, urlPathImage);
                }

                MessageBox.Show("Cập nhật thông tin thành công");
                gridControl1.DataSource = sanPhamBLL.loadSanPham();
                load_PanelControl();
            }
            else
            {
                MessageBox.Show("Thất bại");
            }
        }

        private void btnAction_Click(object sender, EventArgs e)
        {
            if (btnAction.Text == "Chỉnh sửa")
            {
                MaSanPhamTextEdit.ReadOnly = true;
                btnAction.Text = "Thêm sản phẩm";
                btnThem.Enabled = false;
                btnXoa.Enabled = btnSua.Enabled = true;
                btnAction.Image = Image.FromFile(Program.linkURL_Icon + "import.png");
                MaSanPhamTextEdit.Text = selectedSanPham.MaSanPham;
            }
            else if (btnAction.Text == "Thêm sản phẩm")
            {
                MaSanPhamTextEdit.ReadOnly = false;
                btnAction.Text = "Chỉnh sửa";
                btnThem.Enabled = true;
                btnXoa.Enabled = btnSua.Enabled = false;
                btnAction.Image = Image.FromFile(Program.linkURL_Icon + "edit_2.png");
            }
        }

        private void gridControl1_FocusedViewChanged(object sender, DevExpress.XtraGrid.ViewFocusEventArgs e)
        {
            dView = gridControl1.FocusedView as GridView;
            
            if (dView!=gridView1 && dView != null && dView.GetFocusedRowCellValue("TenHinh") != null)
            {
                string image = dView.GetFocusedRowCellValue("TenHinh").ToString();
                string urlFile = Program.linkURL_SanPham + selectedSanPham.LoaiSanPham.MaDanhMuc + "\\" + selectedSanPham.MaLoaiSanPham + "\\" + selectedSanPham.TenSanPham + "\\" + image;
                setupControls.setupPicture(pictureEdit1, urlFile);
                buttonEditHinhAnh.Text = urlFile;
                dView.FocusedRowChanged += DView_FocusedRowChanged;
            }
        }

        private void DView_FocusedRowChanged(object sender, FocusedRowChangedEventArgs e)
        {
            if (dView != gridView1 && dView != null && dView.GetFocusedRowCellValue("TenHinh") != null)
            {
                string image = dView.GetFocusedRowCellValue("TenHinh").ToString();
                string urlFile = Program.linkURL_SanPham + selectedSanPham.LoaiSanPham.MaDanhMuc + "\\" + selectedSanPham.MaLoaiSanPham + "\\" + selectedSanPham.TenSanPham + "\\" + image;
                buttonEditHinhAnh.Text = urlFile;
                setupControls.setupPicture(pictureEdit1, urlFile);
            }
        }

        private void btnThemHinhAnh_Click(object sender, EventArgs e)
        {
            DanhMucHinh imgae = new DanhMucHinh();
            imgae.MaSanPham = selectedSanPham.MaSanPham;
            imgae.TenHinh= buttonEditHinhAnh.Text.Split('\\')[buttonEditHinhAnh.Text.Split('\\').Length - 1];
            if (sanPhamBLL.ThemHinhAnh(imgae))
            {
                string urlPathImage = Program.linkURL_SanPham + selectedSanPham.LoaiSanPham.MaDanhMuc + "\\" + selectedSanPham.MaLoaiSanPham + "\\" + selectedSanPham.TenSanPham;
                string sourceImg = buttonEditHinhAnh.Text;
                if (Directory.Exists(urlPathImage)&&!File.Exists(urlPathImage+"\\"+imgae.TenHinh))
                {
                    File.Copy(sourceImg,urlPathImage + "\\" + imgae.TenHinh);
                }
                MessageBox.Show("Thêm hình ảnh thành công");

                sanPhamBLL = new SanPhamBLL();
                gridControl1.DataSource = sanPhamBLL.loadSanPham();
                load_PanelControl();
            }
            else
            {
                MessageBox.Show("Thất bại");
            }
        }

        private void btnXoaHinhAnh_Click(object sender, EventArgs e)
        {
            DanhMucHinh imgae = new DanhMucHinh();
            imgae.MaSanPham = selectedSanPham.MaSanPham;
            imgae.TenHinh = buttonEditHinhAnh.Text.Split('\\')[buttonEditHinhAnh.Text.Split('\\').Length - 1];
            if (sanPhamBLL.XoaHinhAnh(imgae))
            {
                string urlPathImage = Program.linkURL_SanPham + selectedSanPham.LoaiSanPham.MaDanhMuc + "\\" + selectedSanPham.MaLoaiSanPham + "\\" + selectedSanPham.TenSanPham;
                if (Directory.Exists(urlPathImage) && File.Exists(urlPathImage + "\\" + imgae.TenHinh))
                {
                    File.Delete(urlPathImage + "\\" + imgae.TenHinh);
                }
                MessageBox.Show("Xóa hình ảnh thành công");
                sanPhamBLL = new SanPhamBLL();
                gridControl1.DataSource = sanPhamBLL.loadSanPham();
                load_PanelControl();
            }
            else
            {
                MessageBox.Show("Thất bại");
            }
        }
    }
}
